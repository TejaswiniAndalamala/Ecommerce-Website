[{"D:\\Finalproject\\E-commerce\\E-commerce\\frontend\\src\\index.js":"1","D:\\Finalproject\\E-commerce\\E-commerce\\frontend\\src\\store.js":"2","D:\\Finalproject\\E-commerce\\E-commerce\\frontend\\src\\App.js":"3","D:\\Finalproject\\E-commerce\\E-commerce\\frontend\\src\\reducers\\productReducers.js":"4","D:\\Finalproject\\E-commerce\\E-commerce\\frontend\\src\\reducers\\userReducers.js":"5","D:\\Finalproject\\E-commerce\\E-commerce\\frontend\\src\\reducers\\cartReducers.js":"6","D:\\Finalproject\\E-commerce\\E-commerce\\frontend\\src\\reducers\\orderReducers.js":"7","D:\\Finalproject\\E-commerce\\E-commerce\\frontend\\src\\components\\layout\\Footer.js":"8","D:\\Finalproject\\E-commerce\\E-commerce\\frontend\\src\\components\\Home.js":"9","D:\\Finalproject\\E-commerce\\E-commerce\\frontend\\src\\components\\product\\ProductCategory.js":"10","D:\\Finalproject\\E-commerce\\E-commerce\\frontend\\src\\components\\layout\\Header.js":"11","D:\\Finalproject\\E-commerce\\E-commerce\\frontend\\src\\components\\cart\\Shipping.js":"12","D:\\Finalproject\\E-commerce\\E-commerce\\frontend\\src\\components\\cart\\Payment.js":"13","D:\\Finalproject\\E-commerce\\E-commerce\\frontend\\src\\components\\product\\ProductDetails.js":"14","D:\\Finalproject\\E-commerce\\E-commerce\\frontend\\src\\components\\cart\\OrderSuccess.js":"15","D:\\Finalproject\\E-commerce\\E-commerce\\frontend\\src\\components\\cart\\ConfirmOrder.js":"16","D:\\Finalproject\\E-commerce\\E-commerce\\frontend\\src\\components\\user\\Profile.js":"17","D:\\Finalproject\\E-commerce\\E-commerce\\frontend\\src\\components\\cart\\Cart.js":"18","D:\\Finalproject\\E-commerce\\E-commerce\\frontend\\src\\components\\user\\Register.js":"19","D:\\Finalproject\\E-commerce\\E-commerce\\frontend\\src\\components\\order\\ListOrders.js":"20","D:\\Finalproject\\E-commerce\\E-commerce\\frontend\\src\\components\\user\\UpdateProfile.js":"21","D:\\Finalproject\\E-commerce\\E-commerce\\frontend\\src\\components\\user\\UpdatePassword.js":"22","D:\\Finalproject\\E-commerce\\E-commerce\\frontend\\src\\components\\user\\ForgotPassword.js":"23","D:\\Finalproject\\E-commerce\\E-commerce\\frontend\\src\\components\\user\\NewPassword.js":"24","D:\\Finalproject\\E-commerce\\E-commerce\\frontend\\src\\components\\admin\\Dashboard.js":"25","D:\\Finalproject\\E-commerce\\E-commerce\\frontend\\src\\components\\user\\Login.js":"26","D:\\Finalproject\\E-commerce\\E-commerce\\frontend\\src\\components\\admin\\OrdersList.js":"27","D:\\Finalproject\\E-commerce\\E-commerce\\frontend\\src\\components\\admin\\UpdateProduct.js":"28","D:\\Finalproject\\E-commerce\\E-commerce\\frontend\\src\\components\\admin\\UsersList.js":"29","D:\\Finalproject\\E-commerce\\E-commerce\\frontend\\src\\components\\admin\\UpdateUser.js":"30","D:\\Finalproject\\E-commerce\\E-commerce\\frontend\\src\\components\\admin\\ProductReviews.js":"31","D:\\Finalproject\\E-commerce\\E-commerce\\frontend\\src\\components\\route\\ProtectedRoute.js":"32","D:\\Finalproject\\E-commerce\\E-commerce\\frontend\\src\\actions\\userActions.js":"33","D:\\Finalproject\\E-commerce\\E-commerce\\frontend\\src\\components\\admin\\NewProduct.js":"34","D:\\Finalproject\\E-commerce\\E-commerce\\frontend\\src\\components\\admin\\ProcessOrder.js":"35","D:\\Finalproject\\E-commerce\\E-commerce\\frontend\\src\\components\\admin\\ProductsList.js":"36","D:\\Finalproject\\E-commerce\\E-commerce\\frontend\\src\\components\\order\\OrderDetails.js":"37","D:\\Finalproject\\E-commerce\\E-commerce\\frontend\\src\\components\\layout\\MetaData.js":"38","D:\\Finalproject\\E-commerce\\E-commerce\\frontend\\src\\components\\layout\\Loader.js":"39","D:\\Finalproject\\E-commerce\\E-commerce\\frontend\\src\\components\\product\\Product.js":"40","D:\\Finalproject\\E-commerce\\E-commerce\\frontend\\src\\actions\\productActions.js":"41","D:\\Finalproject\\E-commerce\\E-commerce\\frontend\\src\\components\\layout\\Search.js":"42","D:\\Finalproject\\E-commerce\\E-commerce\\frontend\\src\\actions\\orderActions.js":"43","D:\\Finalproject\\E-commerce\\E-commerce\\frontend\\src\\components\\admin\\Sidebar.js":"44","D:\\Finalproject\\E-commerce\\E-commerce\\frontend\\src\\constants\\cartConstants.js":"45","D:\\Finalproject\\E-commerce\\E-commerce\\frontend\\src\\constants\\productConstants.js":"46","D:\\Finalproject\\E-commerce\\E-commerce\\frontend\\src\\constants\\userConstants.js":"47","D:\\Finalproject\\E-commerce\\E-commerce\\frontend\\src\\constants\\orderConstants.js":"48","D:\\Finalproject\\E-commerce\\E-commerce\\frontend\\src\\assets\\icons\\icons.js":"49","D:\\Finalproject\\E-commerce\\E-commerce\\frontend\\src\\actions\\cartActions.js":"50","D:\\Finalproject\\E-commerce\\E-commerce\\frontend\\src\\components\\cart\\CheckoutSteps.js":"51","D:\\Finalproject\\E-commerce\\E-commerce\\frontend\\src\\components\\review\\ListReviews.js":"52"},{"size":613,"mtime":1714619127042,"results":"53","hashOfConfig":"54"},{"size":1779,"mtime":1714619127127,"results":"55","hashOfConfig":"54"},{"size":5651,"mtime":1714619126957,"results":"56","hashOfConfig":"54"},{"size":7273,"mtime":1714619130318,"results":"57","hashOfConfig":"54"},{"size":6651,"mtime":1714619130392,"results":"58","hashOfConfig":"54"},{"size":1147,"mtime":1714619130176,"results":"59","hashOfConfig":"54"},{"size":4574,"mtime":1714619130238,"results":"60","hashOfConfig":"54"},{"size":345,"mtime":1714619128712,"results":"61","hashOfConfig":"54"},{"size":6464,"mtime":1714619127621,"results":"62","hashOfConfig":"54"},{"size":2519,"mtime":1714619129211,"results":"63","hashOfConfig":"54"},{"size":7285,"mtime":1714619128795,"results":"64","hashOfConfig":"54"},{"size":4886,"mtime":1714619128623,"results":"65","hashOfConfig":"54"},{"size":4787,"mtime":1714619128545,"results":"66","hashOfConfig":"54"},{"size":11067,"mtime":1714619129272,"results":"67","hashOfConfig":"54"},{"size":758,"mtime":1714619128464,"results":"68","hashOfConfig":"54"},{"size":3987,"mtime":1714619128387,"results":"69","hashOfConfig":"54"},{"size":2138,"mtime":1714619129668,"results":"70","hashOfConfig":"54"},{"size":5668,"mtime":1714619128233,"results":"71","hashOfConfig":"54"},{"size":5790,"mtime":1714619129730,"results":"72","hashOfConfig":"54"},{"size":2880,"mtime":1714619129040,"results":"73","hashOfConfig":"54"},{"size":4365,"mtime":1714619129859,"results":"74","hashOfConfig":"54"},{"size":3010,"mtime":1714619129796,"results":"75","hashOfConfig":"54"},{"size":2273,"mtime":1714619129464,"results":"76","hashOfConfig":"54"},{"size":3014,"mtime":1714619129608,"results":"77","hashOfConfig":"54"},{"size":5209,"mtime":1714619127673,"results":"78","hashOfConfig":"54"},{"size":2971,"mtime":1714619129546,"results":"79","hashOfConfig":"54"},{"size":3956,"mtime":1714619127767,"results":"80","hashOfConfig":"54"},{"size":9505,"mtime":1714619127996,"results":"81","hashOfConfig":"54"},{"size":3668,"mtime":1714619128141,"results":"82","hashOfConfig":"54"},{"size":4716,"mtime":1714619128064,"results":"83","hashOfConfig":"54"},{"size":4205,"mtime":1714619127859,"results":"84","hashOfConfig":"54"},{"size":951,"mtime":1714619129389,"results":"85","hashOfConfig":"54"},{"size":7758,"mtime":1714619127407,"results":"86","hashOfConfig":"54"},{"size":8408,"mtime":1714619127723,"results":"87","hashOfConfig":"54"},{"size":6061,"mtime":1714619127814,"results":"88","hashOfConfig":"54"},{"size":3916,"mtime":1714619127903,"results":"89","hashOfConfig":"54"},{"size":3832,"mtime":1714619129096,"results":"90","hashOfConfig":"54"},{"size":241,"mtime":1714619128924,"results":"91","hashOfConfig":"54"},{"size":143,"mtime":1714619128873,"results":"92","hashOfConfig":"54"},{"size":1234,"mtime":1714619129155,"results":"93","hashOfConfig":"54"},{"size":6220,"mtime":1714619127357,"results":"94","hashOfConfig":"54"},{"size":1050,"mtime":1714619128977,"results":"95","hashOfConfig":"54"},{"size":3860,"mtime":1714619127313,"results":"96","hashOfConfig":"54"},{"size":1683,"mtime":1714619127948,"results":"97","hashOfConfig":"54"},{"size":194,"mtime":1714619129925,"results":"98","hashOfConfig":"54"},{"size":1946,"mtime":1714619130045,"results":"99","hashOfConfig":"54"},{"size":2264,"mtime":1714619130102,"results":"100","hashOfConfig":"54"},{"size":1186,"mtime":1714619129982,"results":"101","hashOfConfig":"54"},{"size":1071,"mtime":1714619127576,"results":"102","hashOfConfig":"54"},{"size":1190,"mtime":1714619127263,"results":"103","hashOfConfig":"54"},{"size":1886,"mtime":1714619128310,"results":"104","hashOfConfig":"54"},{"size":737,"mtime":1714619129331,"results":"105","hashOfConfig":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"svtuob",{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Finalproject\\E-commerce\\E-commerce\\frontend\\src\\index.js",[],"D:\\Finalproject\\E-commerce\\E-commerce\\frontend\\src\\store.js",[],"D:\\Finalproject\\E-commerce\\E-commerce\\frontend\\src\\App.js",[],"D:\\Finalproject\\E-commerce\\E-commerce\\frontend\\src\\reducers\\productReducers.js",[],"D:\\Finalproject\\E-commerce\\E-commerce\\frontend\\src\\reducers\\userReducers.js",[],"D:\\Finalproject\\E-commerce\\E-commerce\\frontend\\src\\reducers\\cartReducers.js",[],"D:\\Finalproject\\E-commerce\\E-commerce\\frontend\\src\\reducers\\orderReducers.js",[],"D:\\Finalproject\\E-commerce\\E-commerce\\frontend\\src\\components\\layout\\Footer.js",[],"D:\\Finalproject\\E-commerce\\E-commerce\\frontend\\src\\components\\Home.js",["222","223","224","225"],"import React, { Fragment, useState, useEffect } from \"react\";\r\nimport Pagination from \"react-js-pagination\";\r\nimport Slider from \"rc-slider\";\r\nimport \"rc-slider/assets/index.css\";\r\n\r\nimport MetaData from \"./layout/MetaData\";\r\nimport Product from \"./product/Product\";\r\nimport Loader from \"./layout/Loader\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { getProducts } from \"../actions/productActions\";\r\n\r\nconst { createSliderWithTooltip } = Slider;\r\nconst Range = createSliderWithTooltip(Slider.Range);\r\n\r\nconst Home = ({ match }) => {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [price, setPrice] = useState([1, 100000000]);\r\n  const [category, setCategory] = useState(\"\");\r\n  const [rating, setRating] = useState(0);\r\n\r\n  const categories = [\r\n    \"Select Category\",\r\n    \"Electronics\",\r\n    \"Cameras\",\r\n    \"Laptops\",\r\n    \"Accessories\",\r\n    \"Headphones\",\r\n    \"Food\",\r\n    \"Books\",\r\n    \"Clothes/Shoes\",\r\n    \"Beauty/Health\",\r\n    \"Sports\",\r\n    \"Outdoor\",\r\n    \"Home\",\r\n  ];\r\n\r\n  const alert = useAlert();\r\n  const dispatch = useDispatch();\r\n\r\n  const {\r\n    loading,\r\n    products,\r\n    error,\r\n    productsCount,\r\n    resPerPage,\r\n    filteredProductsCount,\r\n  } = useSelector((state) => state.products);\r\n\r\n  const keyword = match.params.keyword;\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      return alert.error(error);\r\n    }\r\n\r\n    dispatch(getProducts(keyword, currentPage, price, category, rating));\r\n  }, [dispatch, alert, error, keyword, currentPage, price, category, rating]);\r\n\r\n  function setCurrentPageNo(pageNumber) {\r\n    setCurrentPage(pageNumber);\r\n  }\r\n\r\n  const pricesArray = products.map((obj) => obj.price);\r\n\r\n  const lowestPrice = Math.min(...pricesArray);\r\n  const highestPrice = Math.max(...pricesArray);\r\n\r\n  let count = productsCount;\r\n  if (keyword) {\r\n    count = filteredProductsCount;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <Fragment>\r\n          <MetaData title={\"Buy Best Products Online\"} />\r\n\r\n          <h1\r\n            id=\"products_heading\"\r\n            style={{\r\n              fontFamily: \"Bona Nova\",\r\n            }}\r\n          >\r\n            Latest Products\r\n          </h1>\r\n\r\n          <section id=\"products\" className=\"container mt-5\">\r\n            <div className=\"row\">\r\n              {keyword ? (\r\n                <Fragment>\r\n                  <div className=\"col-6 col-md-3 mt-5 mb-5\">\r\n                    <div className=\"px-5\">\r\n                    {/* <Range\r\n                        // marks={{\r\n                        //   1: `$1`,\r\n                        //   1000: `$1000`,\r\n                        // }}\r\n                        min={lowestPrice  ?? lowestPrice}\r\n                        max={highestPrice ?? highestPrice}\r\n                        defaultValue={[lowestPrice, highestPrice]}\r\n                        tipFormatter={(value) => `$${value}`}\r\n                        tipProps={{\r\n                          placement: \"top\",\r\n                          visible: true,\r\n                        }}\r\n                        value={price}\r\n                        onChange={(price) => setPrice(price)}\r\n                      /> */}\r\n\r\n                      <hr className=\"my-5\" />\r\n\r\n                      <div className=\"mt-5\">\r\n                        <h4 className=\"mb-3\">Categories</h4>\r\n\r\n                        <ul className=\"pl-0\">\r\n                          {categories.map((category) => (\r\n                            <li\r\n                              style={{\r\n                                cursor: \"pointer\",\r\n                                listStyleType: \"none\",\r\n                              }}\r\n                              key={category}\r\n                              onClick={() => setCategory(category)}\r\n                            >\r\n                              {category}\r\n                            </li>\r\n                          ))}\r\n                        </ul>\r\n                      </div>\r\n\r\n                      <hr className=\"my-3\" />\r\n\r\n                      <div className=\"mt-5\">\r\n                        <h4 className=\"mb-3\">Ratings</h4>\r\n\r\n                        <ul className=\"pl-0\">\r\n                          {[5, 4, 3, 2, 1].map((star) => (\r\n                            <li\r\n                              style={{\r\n                                cursor: \"pointer\",\r\n                                listStyleType: \"none\",\r\n                              }}\r\n                              key={star}\r\n                              onClick={() => setRating(star)}\r\n                            >\r\n                              <div className=\"rating-outer\">\r\n                                <div\r\n                                  className=\"rating-inner\"\r\n                                  style={{\r\n                                    width: `${star * 20}%`,\r\n                                  }}\r\n                                ></div>\r\n                              </div>\r\n                            </li>\r\n                          ))}\r\n                        </ul>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"col-6 col-md-9\">\r\n                    <div className=\"row\">\r\n                      {products.map((product) => (\r\n                        <Product key={product._id} product={product} col={4} />\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                </Fragment>\r\n              ) : (\r\n                products.map((product) => (\r\n                  <Product key={product._id} product={product} col={3} />\r\n                ))\r\n              )}\r\n            </div>\r\n          </section>\r\n\r\n          {resPerPage <= count && (\r\n            <div className=\"d-flex justify-content-center mt-5\">\r\n              <Pagination\r\n                activePage={currentPage}\r\n                itemsCountPerPage={resPerPage}\r\n                totalItemsCount={productsCount}\r\n                onChange={setCurrentPageNo}\r\n                nextPageText={\"Next\"}\r\n                prevPageText={\"Prev\"}\r\n                firstPageText={\"First\"}\r\n                lastPageText={\"Last\"}\r\n                itemClass=\"page-item\"\r\n                linkClass=\"page-link\"\r\n              />\r\n            </div>\r\n          )}\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","D:\\Finalproject\\E-commerce\\E-commerce\\frontend\\src\\components\\product\\ProductCategory.js",["226","227","228"],"import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getProducts } from \"../../actions/productActions\";\r\nimport { useAlert } from \"react-alert\";\r\nimport Loader from \"../layout/Loader\";\r\nimport Product from \"./Product\";\r\nimport MetaData from \"../layout/MetaData\";\r\nimport Pagination from \"react-js-pagination\";\r\n\r\nexport default function ProductCategory({ match }) {\r\n  console.log(match);\r\n  const url = new URL(window.location.href);\r\n  const params = new URLSearchParams(url.search);\r\n  const category = params.get(\"category\");\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [price, setPrice] = useState([1, 100000000]);\r\n  const [rating, setRating] = useState(0);\r\n\r\n  const alert = useAlert();\r\n  const dispatch = useDispatch();\r\n\r\n  const {\r\n    loading,\r\n    products,\r\n    error,\r\n    productsCount,\r\n    resPerPage,\r\n    filteredProductsCount,\r\n  } = useSelector((state) => state.products);\r\n\r\n  const keyword = match.params?.keyword;\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      return alert.error(error);\r\n    }\r\n\r\n    dispatch(getProducts(keyword, currentPage, price, category, rating));\r\n  }, [dispatch, alert, error, keyword, currentPage, price, category, rating]);\r\n\r\n  function setCurrentPageNo(pageNumber) {\r\n    setCurrentPage(pageNumber);\r\n  }\r\n\r\n  let count = productsCount;\r\n\r\n  return (\r\n    <Fragment>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <Fragment>\r\n          <MetaData title={\"Buy Best Products Online\"} />\r\n          <h1 id=\"products_heading\">{category}</h1>\r\n          <div className=\"col-12 col-md-12\">\r\n            <div className=\"row\">\r\n              {products.map((product) => (\r\n                <Product key={product._id} product={product} col={4} />\r\n              ))}\r\n            </div>\r\n          </div>\r\n          {resPerPage <= count && (\r\n            <div className=\"d-flex justify-content-center mt-5\">\r\n              <Pagination\r\n                activePage={currentPage}\r\n                itemsCountPerPage={resPerPage}\r\n                totalItemsCount={productsCount}\r\n                onChange={setCurrentPageNo}\r\n                nextPageText={\"Next\"}\r\n                prevPageText={\"Prev\"}\r\n                firstPageText={\"First\"}\r\n                lastPageText={\"Last\"}\r\n                itemClass=\"page-item\"\r\n                linkClass=\"page-link\"\r\n              />\r\n            </div>\r\n          )}\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n}\r\n","D:\\Finalproject\\E-commerce\\E-commerce\\frontend\\src\\components\\layout\\Header.js",["229","230"],"import React, { Fragment } from \"react\";\r\nimport { Route, Link } from \"react-router-dom\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { logout } from \"../../actions/userActions\";\r\nimport LogoIMG from \"../../assets/Logo1.png\";\r\n\r\nimport Search from \"./Search\";\r\n\r\nimport \"../../App.css\";\r\nimport { DropdownButton, Dropdown } from \"react-bootstrap\";\r\nimport { DownArrowBtn } from \"../../assets/icons/icons\";\r\n\r\nconst Header = () => {\r\n  const alert = useAlert();\r\n  const dispatch = useDispatch();\r\n\r\n  const { user, loading } = useSelector((state) => state.auth);\r\n  const { cartItems } = useSelector((state) => state.cart);\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout());\r\n    alert.success(\"Logged out successfully.\");\r\n  };\r\n\r\n  function handleButtonClick(route) {\r\n    console.log(route);\r\n  }\r\n\r\n  const products = [\r\n    {\r\n      id: 1,\r\n      name: \"Electronics\",\r\n      route: \"Electronics\",\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Cameras\",\r\n      route: \"Cameras\",\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"Laptops\",\r\n      route: \"Laptops\",\r\n    },\r\n    {\r\n      id: 4,\r\n      name: \"Accessories\",\r\n      route: \"Accessories\",\r\n    },\r\n    {\r\n      id: 5,\r\n      name: \"Headphones\",\r\n      route: \"Headphones\",\r\n    },\r\n    {\r\n      id: 1,\r\n      name: \"Electronics\",\r\n      route: \"Electronics\",\r\n    },\r\n    {\r\n      id: 6,\r\n      name: \"Food\",\r\n      route: \"Food\",\r\n    },\r\n    {\r\n      id: 7,\r\n      name: \"Books\",\r\n      route: \"Books\",\r\n    },\r\n    {\r\n      id: 8,\r\n      name: \"Clothes/Shoes\",\r\n      route: \"Clothes/Shoes\",\r\n    },\r\n    {\r\n      id: 9,\r\n      name: \"Beauty/Health\",\r\n      route: \"Beauty/Health\",\r\n    },\r\n    {\r\n      id: 10,\r\n      name: \"Sports\",\r\n      route: \"Sports\",\r\n    },\r\n    {\r\n      id: 11,\r\n      name: \"Outdoor\",\r\n      route: \"Outdoor\",\r\n    },\r\n    {\r\n      id: 12,\r\n      name: \"Home\",\r\n      route: \"Home\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Fragment>\r\n      <nav className=\"navbar row\">\r\n        <div className=\"col-12 col-md-2\">\r\n          <div className=\"navbar-brand\">\r\n            <Link to=\"/\">\r\n              <svg\r\n                className=\"ml-5\"\r\n                fill=\"#fff\"\r\n                width={40}\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                viewBox=\"0 0 448 512\"\r\n              >\r\n                <path d=\"M388.3 104.1a4.7 4.7 0 0 0 -4.4-4c-2 0-37.2-.8-37.2-.8s-21.6-20.8-29.6-28.8V503.2L442.8 472S388.7 106.5 388.3 104.1zM288.7 70.5a116.7 116.7 0 0 0 -7.2-17.6C271 32.9 255.4 22 237 22a15 15 0 0 0 -4 .4c-.4-.8-1.2-1.2-1.6-2C223.4 11.6 213 7.6 200.6 8c-24 .8-48 18-67.3 48.8-13.6 21.6-24 48.8-26.8 70.1-27.6 8.4-46.8 14.4-47.2 14.8-14 4.4-14.4 4.8-16 18-1.2 10-38 291.8-38 291.8L307.9 504V65.7a41.7 41.7 0 0 0 -4.4 .4S297.9 67.7 288.7 70.5zM233.4 87.7c-16 4.8-33.6 10.4-50.8 15.6 4.8-18.8 14.4-37.6 25.6-50 4.4-4.4 10.4-9.6 17.2-12.8C232.2 54.9 233.8 74.5 233.4 87.7zM200.6 24.4A27.5 27.5 0 0 1 215 28c-6.4 3.2-12.8 8.4-18.8 14.4-15.2 16.4-26.8 42-31.6 66.5-14.4 4.4-28.8 8.8-42 12.8C131.3 83.3 163.8 25.2 200.6 24.4zM154.2 244.6c1.6 25.6 69.3 31.2 73.3 91.7 2.8 47.6-25.2 80.1-65.7 82.5-48.8 3.2-75.7-25.6-75.7-25.6l10.4-44s26.8 20.4 48.4 18.8c14-.8 19.2-12.4 18.8-20.4-2-33.6-57.2-31.6-60.8-86.9-3.2-46.4 27.2-93.3 94.5-97.7 26-1.6 39.2 4.8 39.2 4.8L221.4 225.4s-17.2-8-37.6-6.4C154.2 221 153.8 239.8 154.2 244.6zM249.4 82.9c0-12-1.6-29.2-7.2-43.6 18.4 3.6 27.2 24 31.2 36.4Q262.6 78.7 249.4 82.9z\" />\r\n              </svg>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-1\">\r\n          <DropdownButton title={<DownArrowBtn />}>\r\n            {products.map((product) => {\r\n              return (\r\n                <Dropdown.Item key={product.id}>\r\n                  <Link\r\n                    className=\"dropdown-link\"\r\n                    to={`/products?category=${product.route}`}\r\n                  >\r\n                    {product.name}\r\n                  </Link>\r\n                </Dropdown.Item>\r\n              );\r\n            })}\r\n          </DropdownButton>\r\n        </div>\r\n        <div className=\"col-12 col-md-6 mt-2 mt-md-0\">\r\n          <Route render={({ history }) => <Search history={history} />} />\r\n        </div>\r\n\r\n        <div className=\"col-12 col-md-2 mt-4 mt-md-0 text-center\">\r\n          <Link\r\n            to=\"/cart\"\r\n            style={{ textDecoration: \"none\", position: \"relative\" }}\r\n          >\r\n            <span id=\"cart\" className=\"mt-2 mr-4\">\r\n              <svg\r\n                width={30}\r\n                fill=\"#fff\"\r\n                style={{ position: \"absolute\", top: \"0rem\" }}\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                viewBox=\"0 0 576 512\"\r\n              >\r\n                <path d=\"M0 24C0 10.7 10.7 0 24 0H69.5c22 0 41.5 12.8 50.6 32h411c26.3 0 45.5 25 38.6 50.4l-41 152.3c-8.5 31.4-37 53.3-69.5 53.3H170.7l5.4 28.5c2.2 11.3 12.1 19.5 23.6 19.5H488c13.3 0 24 10.7 24 24s-10.7 24-24 24H199.7c-34.6 0-64.3-24.6-70.7-58.5L77.4 54.5c-.7-3.8-4-6.5-7.9-6.5H24C10.7 48 0 37.3 0 24zM128 464a48 48 0 1 1 96 0 48 48 0 1 1 -96 0zm336-48a48 48 0 1 1 0 96 48 48 0 1 1 0-96z\" />\r\n              </svg>\r\n            </span>\r\n\r\n            <span\r\n              className=\" rounded-circle\"\r\n              style={{ position: \"absolute\", fontSize: \"0.7rem\" }}\r\n              id=\"cart_count\"\r\n            >\r\n              {cartItems.length}\r\n            </span>\r\n          </Link>\r\n\r\n          {user ? (\r\n            <div className=\"ml-4 dropdown d-inline\">\r\n              <Link\r\n                to=\"#!\"\r\n                className=\"btn dropdown-toggle text-white mr-4\"\r\n                type=\"button\"\r\n                id=\"dropDownMenuButton\"\r\n                data-toggle=\"dropdown\"\r\n                aria-haspopup=\"true\"\r\n                aria-expanded=\"false\"\r\n              >\r\n                <figure className=\"avatar avatar-nav\">\r\n                  <img\r\n                    src={user.avatar && user.avatar.url}\r\n                    alt={user && user.name}\r\n                    className=\"rounded-circle\"\r\n                  />\r\n                </figure>\r\n                <span>{user && user.name}</span>\r\n              </Link>\r\n\r\n              <div\r\n                className=\"dropdown-menu\"\r\n                aria-labelledby=\"dropDownMenuButton\"\r\n              >\r\n                {user && user.role === \"admin\" && (\r\n                  <Link className=\"dropdown-item\" to=\"/dashboard\">\r\n                    Dashboard\r\n                  </Link>\r\n                )}\r\n                <Link className=\"dropdown-item\" to=\"/orders/me\">\r\n                  Orders\r\n                </Link>\r\n                <Link className=\"dropdown-item\" to=\"/me\">\r\n                  Profile\r\n                </Link>\r\n                <Link\r\n                  className=\"dropdown-item text-danger\"\r\n                  to=\"/\"\r\n                  onClick={logoutHandler}\r\n                >\r\n                  Logout\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            !loading && (\r\n              <Link to=\"/login\" className=\"btn ml-4\" id=\"login_btn\">\r\n                Login\r\n              </Link>\r\n            )\r\n          )}\r\n        </div>\r\n      </nav>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","D:\\Finalproject\\E-commerce\\E-commerce\\frontend\\src\\components\\cart\\Shipping.js",[],"D:\\Finalproject\\E-commerce\\E-commerce\\frontend\\src\\components\\cart\\Payment.js",[],"D:\\Finalproject\\E-commerce\\E-commerce\\frontend\\src\\components\\product\\ProductDetails.js",["231","232"],"import React, { Fragment, useState, useEffect } from 'react';\r\nimport { Carousel } from 'react-bootstrap';\r\n\r\nimport Loader from '../layout/Loader';\r\nimport MetaData from '../layout/MetaData';\r\nimport ListReviews from '../review/ListReviews';\r\n\r\nimport { useAlert } from 'react-alert';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  getProductDetails,\r\n  newReview,\r\n  clearErrors,\r\n} from '../../actions/productActions';\r\nimport { addItemToCart } from '../../actions/cartActions';\r\nimport { NEW_REVIEW_RESET } from '../../constants/productConstants';\r\nimport { Link, useParams } from \"react-router-dom/cjs/react-router-dom.min\";\r\n\r\nconst ProductDetails = ({ match }) => {\r\n  const [quantity, setQuantity] = useState(1);\r\n  const [rating, setRating] = useState(0);\r\n  const [comment, setComment] = useState(\"\");\r\n  const [isAvailable, setIsAvailable] = useState(false);\r\n  const { id } = useParams();\r\n  const cartItems = JSON.parse(localStorage.getItem(\"cartItems\")) ?? [];\r\n\r\n  console.log(cartItems);\r\n\r\n  useEffect(() => {\r\n    cartItems.map((ele) => {\r\n      if (ele.product === id) {\r\n        setIsAvailable(true);\r\n      }\r\n    });\r\n  }, [isAvailable]);\r\n\r\n  const dispatch = useDispatch();\r\n  const alert = useAlert();\r\n\r\n  const { loading, error, product } = useSelector(\r\n    (state) => state.productDetails\r\n  );\r\n  const { user } = useSelector((state) => state.auth);\r\n  const { error: reviewError, success } = useSelector(\r\n    (state) => state.newReview\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(getProductDetails(match.params.id));\r\n\r\n    if (error) {\r\n      alert.error(error);\r\n      dispatch(clearErrors());\r\n    }\r\n\r\n    if (reviewError) {\r\n      alert.error(reviewError);\r\n      dispatch(clearErrors());\r\n    }\r\n\r\n    if (success) {\r\n      alert.success(\"Reivew posted successfully\");\r\n      dispatch({ type: NEW_REVIEW_RESET });\r\n    }\r\n  }, [dispatch, alert, error, reviewError, match.params.id, success]);\r\n\r\n  const addToCart = () => {\r\n    dispatch(addItemToCart(match.params.id, quantity));\r\n    setIsAvailable(true);\r\n    alert.success(\"Item Added to Cart\");\r\n  };\r\n\r\n  const increaseQty = () => {\r\n    const count = document.querySelector(\".count\");\r\n\r\n    if (count.valueAsNumber >= product.stock) return;\r\n\r\n    const qty = count.valueAsNumber + 1;\r\n    setQuantity(qty);\r\n  };\r\n\r\n  const decreaseQty = () => {\r\n    const count = document.querySelector(\".count\");\r\n\r\n    if (count.valueAsNumber <= 1) return;\r\n\r\n    const qty = count.valueAsNumber - 1;\r\n    setQuantity(qty);\r\n  };\r\n\r\n  function setUserRatings() {\r\n    const stars = document.querySelectorAll(\".star\");\r\n\r\n    stars.forEach((star, index) => {\r\n      star.starValue = index + 1;\r\n\r\n      [\"click\", \"mouseover\", \"mouseout\"].forEach(function (e) {\r\n        star.addEventListener(e, showRatings);\r\n      });\r\n    });\r\n\r\n    function showRatings(e) {\r\n      stars.forEach((star, index) => {\r\n        if (e.type === \"click\") {\r\n          if (index < this.starValue) {\r\n            star.classList.add(\"orange\");\r\n\r\n            setRating(this.starValue);\r\n          } else {\r\n            star.classList.remove(\"orange\");\r\n          }\r\n        }\r\n\r\n        if (e.type === \"mouseover\") {\r\n          if (index < this.starValue) {\r\n            star.classList.add(\"yellow\");\r\n          } else {\r\n            star.classList.remove(\"yellow\");\r\n          }\r\n        }\r\n\r\n        if (e.type === \"mouseout\") {\r\n          star.classList.remove(\"yellow\");\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  const reviewHandler = () => {\r\n    const formData = new FormData();\r\n\r\n    formData.set(\"rating\", rating);\r\n    formData.set(\"comment\", comment);\r\n    formData.set(\"productId\", match.params.id);\r\n\r\n    dispatch(newReview(formData));\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <Fragment>\r\n          <MetaData title={product.name} />\r\n          <div className=\"row d-flex justify-content-around\">\r\n            <div className=\"col-12 col-lg-5 img-fluid\" id=\"product_image\">\r\n              <Carousel pause=\"hover\">\r\n                {product.images &&\r\n                  product.images.map((image) => (\r\n                    <Carousel.Item key={image.public_id}>\r\n                      <img\r\n                        className=\"d-block w-100\"\r\n                        src={image.url}\r\n                        alt={product.title}\r\n                        key={image.public_id}\r\n                      />\r\n                    </Carousel.Item>\r\n                  ))}\r\n              </Carousel>\r\n            </div>\r\n\r\n            <div className=\"col-12 col-lg-5 mt-5\">\r\n              <h3>{product.name}</h3>\r\n              <p id=\"product_id\">Product # {product._id}</p>\r\n\r\n              <hr />\r\n\r\n              <div className=\"rating-outer\">\r\n                <div\r\n                  className=\"rating-inner\"\r\n                  style={{ width: `${(product.ratings / 5) * 100}%` }}\r\n                ></div>\r\n              </div>\r\n              <span id=\"no_of_reviews\">({product.numOfReviews} Reviews)</span>\r\n\r\n              <hr />\r\n\r\n              <p id=\"product_price\">&#8377; {product.price}</p>\r\n              {!isAvailable && (\r\n                <div className=\"stockCounter d-inline\">\r\n                  <span className=\"btn btn-danger minus\" onClick={decreaseQty}>\r\n                    -\r\n                  </span>\r\n\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"form-control count d-inline\"\r\n                    value={quantity}\r\n                    readOnly\r\n                  />\r\n\r\n                  <span className=\"btn btn-primary plus\" onClick={increaseQty}>\r\n                    +\r\n                  </span>\r\n                </div>\r\n              )}\r\n              {isAvailable ? (\r\n                <Link to=\"/cart\">\r\n                  <button\r\n                    type=\"button\"\r\n                    id=\"cart_btn\"\r\n                    className=\"btn btn-primary d-inline\"\r\n                  >\r\n                    Go to Cart\r\n                  </button>\r\n                </Link>\r\n              ) : (\r\n                <button\r\n                  type=\"button\"\r\n                  id=\"cart_btn\"\r\n                  className=\"btn btn-primary d-inline ml-4\"\r\n                  disabled={product.stock === 0}\r\n                  onClick={addToCart}\r\n                >\r\n                  Add to Cart\r\n                </button>\r\n              )}\r\n\r\n              <hr />\r\n\r\n              <p>\r\n                Status:{\" \"}\r\n                <span\r\n                  id=\"stock_status\"\r\n                  className={product.stock > 0 ? \"greenColor\" : \"redColor\"}\r\n                >\r\n                  {product.stock > 0 ? \"In Stock\" : \"Out of Stock\"}\r\n                </span>\r\n              </p>\r\n\r\n              <hr />\r\n\r\n              <p>\r\n                Quantity:{\" \"}\r\n                <span\r\n                  id=\"quantity_status\"\r\n                  className={product.stock > 0 ? \"greenColor\" : \"redColor\"}\r\n                >\r\n                  {product.stock}\r\n                </span>\r\n              </p>\r\n\r\n              <hr />\r\n\r\n              <h4 className=\"mt-2\">Description:</h4>\r\n              <p>{product.description}</p>\r\n              <hr />\r\n              <p id=\"product_seller mb-3\">\r\n                Sold by: <strong>{product.seller}</strong>\r\n              </p>\r\n\r\n              {user ? (\r\n                <button\r\n                  id=\"review_btn\"\r\n                  type=\"button\"\r\n                  className=\"btn btn-primary mt-4\"\r\n                  data-toggle=\"modal\"\r\n                  data-target=\"#ratingModal\"\r\n                  onClick={setUserRatings}\r\n                >\r\n                  Submit Your Review\r\n                </button>\r\n              ) : (\r\n                <div className=\"alert alert-danger mt-5\" type=\"alert\">\r\n                  Login to post your review.\r\n                </div>\r\n              )}\r\n\r\n              <div className=\"row mt-2 mb-5\">\r\n                <div className=\"rating w-50\">\r\n                  <div\r\n                    className=\"modal fade\"\r\n                    id=\"ratingModal\"\r\n                    tabIndex=\"-1\"\r\n                    role=\"dialog\"\r\n                    aria-labelledby=\"ratingModalLabel\"\r\n                    aria-hidden=\"true\"\r\n                  >\r\n                    <div className=\"modal-dialog\" role=\"document\">\r\n                      <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                          <h5 className=\"modal-title\" id=\"ratingModalLabel\">\r\n                            Submit Review\r\n                          </h5>\r\n                          <button\r\n                            type=\"button\"\r\n                            className=\"close\"\r\n                            data-dismiss=\"modal\"\r\n                            aria-label=\"Close\"\r\n                          >\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                          </button>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                          <ul className=\"stars\">\r\n                            <li className=\"star\">\r\n                              <i className=\"fa fa-star\"></i>\r\n                            </li>\r\n                            <li className=\"star\">\r\n                              <i className=\"fa fa-star\"></i>\r\n                            </li>\r\n                            <li className=\"star\">\r\n                              <i className=\"fa fa-star\"></i>\r\n                            </li>\r\n                            <li className=\"star\">\r\n                              <i className=\"fa fa-star\"></i>\r\n                            </li>\r\n                            <li className=\"star\">\r\n                              <i className=\"fa fa-star\"></i>\r\n                            </li>\r\n                          </ul>\r\n\r\n                          <textarea\r\n                            name=\"review\"\r\n                            id=\"review\"\r\n                            className=\"form-control mt-3\"\r\n                            value={comment}\r\n                            onChange={(e) => setComment(e.target.value)}\r\n                          ></textarea>\r\n\r\n                          <button\r\n                            className=\"btn my-3 float-right review-btn px-4 text-white\"\r\n                            onClick={reviewHandler}\r\n                            data-dismiss=\"modal\"\r\n                            aria-label=\"Close\"\r\n                          >\r\n                            Submit\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {product.reviews && product.reviews.length > 0 && (\r\n            <ListReviews reviews={product.reviews} />\r\n          )}\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ProductDetails;\r\n","D:\\Finalproject\\E-commerce\\E-commerce\\frontend\\src\\components\\cart\\OrderSuccess.js",[],"D:\\Finalproject\\E-commerce\\E-commerce\\frontend\\src\\components\\cart\\ConfirmOrder.js",[],"D:\\Finalproject\\E-commerce\\E-commerce\\frontend\\src\\components\\user\\Profile.js",[],"D:\\Finalproject\\E-commerce\\E-commerce\\frontend\\src\\components\\cart\\Cart.js",["233"],"import React, { Fragment } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport MetaData from '../layout/MetaData'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { addItemToCart, removeItemFromCart } from '../../actions/cartActions'\r\n\r\nconst Cart = ({ history }) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { cartItems } = useSelector(state => state.cart)\r\n\r\n    const removeCartItemHandler = (id) => {\r\n        dispatch(removeItemFromCart(id))\r\n    }\r\n\r\n    const increaseQty = (id, quantity, stock) => {\r\n        const newQty = quantity + 1;\r\n\r\n        if (newQty > stock) return;\r\n\r\n        dispatch(addItemToCart(id, newQty))\r\n    }\r\n\r\n    const decreaseQty = (id, quantity) => {\r\n\r\n        const newQty = quantity - 1;\r\n\r\n        if (newQty <= 0) return;\r\n\r\n        dispatch(addItemToCart(id, newQty))\r\n\r\n    }\r\n\r\n    const checkoutHandler = () => {\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        <MetaData title={\"Your Cart\"} />\r\n        {cartItems.length === 0 ? (\r\n          <h2 className=\"mt-5\">Your Cart is Empty</h2>\r\n        ) : (\r\n          <Fragment>\r\n            <h2 className=\"mt-5\">\r\n              Your Cart: <b>{cartItems.length} items</b>\r\n            </h2>\r\n\r\n            <div className=\"row d-flex justify-content-between\">\r\n              <div className=\"col-12 col-lg-8\">\r\n                {cartItems.map((item) => (\r\n                  <Fragment>\r\n                    <hr />\r\n\r\n                    <div className=\"cart-item\" key={item.product}>\r\n                      <div className=\"row\">\r\n                        <div className=\"col-4 col-lg-3\">\r\n                          <img\r\n                            src={item.image}\r\n                            alt=\"Laptop\"\r\n                            height=\"90\"\r\n                            width=\"115\"\r\n                          />\r\n                        </div>\r\n\r\n                        <div className=\"col-5 col-lg-3\">\r\n                          <Link to={`/products/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </div>\r\n\r\n                        <div className=\"col-4 col-lg-2 mt-4 mt-lg-0\">\r\n                          <p id=\"card_item_price\">₹{item.price}</p>\r\n                        </div>\r\n\r\n                        <div className=\"col-4 col-lg-3 mt-4 mt-lg-0\">\r\n                          <div className=\"stockCounter d-inline\">\r\n                            <span\r\n                              className=\"btn btn-danger minus\"\r\n                              onClick={() =>\r\n                                decreaseQty(item.product, item.quantity)\r\n                              }\r\n                            >\r\n                              -\r\n                            </span>\r\n\r\n                            <input\r\n                              type=\"number\"\r\n                              className=\"form-control count d-inline\"\r\n                              value={item.quantity}\r\n                              readOnly\r\n                            />\r\n\r\n                            <span\r\n                              className=\"btn btn-primary plus\"\r\n                              onClick={() =>\r\n                                increaseQty(\r\n                                  item.product,\r\n                                  item.quantity,\r\n                                  item.stock\r\n                                )\r\n                              }\r\n                            >\r\n                              +\r\n                            </span>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-4 col-lg-1 mt-4 mt-lg-0\">\r\n                          <i\r\n                            id=\"delete_cart_item\"\r\n                            className=\"fa fa-trash btn btn-danger\"\r\n                            onClick={() => removeCartItemHandler(item.product)}\r\n                          ></i>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <hr />\r\n                  </Fragment>\r\n                ))}\r\n              </div>\r\n\r\n              <div className=\"col-12 col-lg-3 my-4\">\r\n                <div id=\"order_summary\">\r\n                  <h4>Order Summary</h4>\r\n                  <hr />\r\n                  <p>\r\n                    Subtotal:{\" \"}\r\n                    <span className=\"order-summary-values\">\r\n                      {cartItems.reduce(\r\n                        (acc, item) => acc + Number(item.quantity),\r\n                        0\r\n                      )}{\" \"}\r\n                      (Units)\r\n                    </span>\r\n                  </p>\r\n                  <p>\r\n                    Est. total:{\" \"}\r\n                    <span className=\"order-summary-values\">\r\n                      ₹\r\n                      {cartItems\r\n                        .reduce(\r\n                          (acc, item) => acc + item.quantity * item.price,\r\n                          0\r\n                        )\r\n                        .toFixed(2)}\r\n                    </span>\r\n                  </p>\r\n\r\n                  <hr />\r\n                  <button\r\n                    id=\"checkout_btn\"\r\n                    className=\"btn btn-primary btn-block\"\r\n                    onClick={checkoutHandler}\r\n                  >\r\n                    Check out\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Fragment>\r\n        )}\r\n      </Fragment>\r\n    );\r\n}\r\n\r\nexport default Cart\r\n","D:\\Finalproject\\E-commerce\\E-commerce\\frontend\\src\\components\\user\\Register.js",[],"D:\\Finalproject\\E-commerce\\E-commerce\\frontend\\src\\components\\order\\ListOrders.js",[],"D:\\Finalproject\\E-commerce\\E-commerce\\frontend\\src\\components\\user\\UpdateProfile.js",["234"],"import React, { Fragment, useState, useEffect } from 'react';\r\n\r\nimport MetaData from '../layout/MetaData';\r\n\r\nimport { useAlert } from 'react-alert';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  updateProfile,\r\n  loadUser,\r\n  clearErrors,\r\n} from '../../actions/userActions';\r\nimport { UPDATE_PROFILE_RESET } from '../../constants/userConstants';\r\n\r\nconst UpdateProfile = ({ history }) => {\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [avatar, setAvatar] = useState('');\r\n  const [avatarPreview, setAvatarPreview] = useState(\r\n    '/images/default_avatar.jpg'\r\n  );\r\n\r\n  const alert = useAlert();\r\n  const dispatch = useDispatch();\r\n\r\n  const { user } = useSelector((state) => state.auth);\r\n  const { error, isUpdated, loading } = useSelector((state) => state.user);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      setName(user.name);\r\n      setEmail(user.email);\r\n      setAvatarPreview(user.avatar.url);\r\n    }\r\n\r\n    if (error) {\r\n      alert.error(error);\r\n      dispatch(clearErrors());\r\n    }\r\n\r\n    if (isUpdated) {\r\n      alert.success('User updated successfully');\r\n      dispatch(loadUser());\r\n\r\n      history.push('/me');\r\n\r\n      dispatch({\r\n        type: UPDATE_PROFILE_RESET,\r\n      });\r\n    }\r\n  }, [dispatch, alert, error, history, isUpdated]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    const formData = new FormData();\r\n    formData.set('name', name);\r\n    formData.set('email', email);\r\n    formData.set('avatar', avatar);\r\n\r\n    dispatch(updateProfile(formData));\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    const reader = new FileReader();\r\n\r\n    reader.onload = () => {\r\n      if (reader.readyState === 2) {\r\n        setAvatarPreview(reader.result);\r\n        setAvatar(reader.result);\r\n      }\r\n    };\r\n\r\n    reader.readAsDataURL(e.target.files[0]);\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <MetaData title={'Update Profile'} />\r\n\r\n      <div className='row wrapper'>\r\n        <div className='col-10 col-lg-5'>\r\n          <form\r\n            className='shadow-lg'\r\n            onSubmit={submitHandler}\r\n            encType='multipart/form-data'\r\n          >\r\n            <h1 className='mt-2 mb-5'>Update Profile</h1>\r\n\r\n            <div className='form-group'>\r\n              <label htmlFor='email_field'>Name</label>\r\n              <input\r\n                type='name'\r\n                id='name_field'\r\n                className='form-control'\r\n                name='name'\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group'>\r\n              <label htmlFor='email_field'>Email</label>\r\n              <input\r\n                type='email'\r\n                id='email_field'\r\n                className='form-control'\r\n                name='email'\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group'>\r\n              <label htmlFor='avatar_upload'>Avatar</label>\r\n              <div className='d-flex align-items-center'>\r\n                <div>\r\n                  <figure className='avatar mr-3 item-rtl'>\r\n                    <img\r\n                      src={avatarPreview}\r\n                      className='rounded-circle'\r\n                      alt='Avatar Preview'\r\n                    />\r\n                  </figure>\r\n                </div>\r\n                <div className='custom-file'>\r\n                  <input\r\n                    type='file'\r\n                    name='avatar'\r\n                    className='custom-file-input'\r\n                    id='customFile'\r\n                    accept='image/*'\r\n                    onChange={onChange}\r\n                  />\r\n                  <label className='custom-file-label' htmlFor='customFile'>\r\n                    Choose Avatar\r\n                  </label>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <button\r\n              type='submit'\r\n              className='btn update-btn btn-block mt-4 mb-3'\r\n              disabled={loading ? true : false}\r\n            >\r\n              Update\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default UpdateProfile;\r\n","D:\\Finalproject\\E-commerce\\E-commerce\\frontend\\src\\components\\user\\UpdatePassword.js",[],"D:\\Finalproject\\E-commerce\\E-commerce\\frontend\\src\\components\\user\\ForgotPassword.js",[],"D:\\Finalproject\\E-commerce\\E-commerce\\frontend\\src\\components\\user\\NewPassword.js",[],"D:\\Finalproject\\E-commerce\\E-commerce\\frontend\\src\\components\\admin\\Dashboard.js",[],"D:\\Finalproject\\E-commerce\\E-commerce\\frontend\\src\\components\\user\\Login.js",["235"],"import React, { Fragment, useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Loader from '../layout/Loader'\r\nimport MetaData from '../layout/MetaData'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { login, clearErrors } from '../../actions/userActions'\r\n\r\nconst Login = ({ history, location }) => {\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { isAuthenticated, error, loading } = useSelector(state => state.auth);\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    useEffect(() => {\r\n\r\n        if (isAuthenticated) {\r\n            history.push(redirect)\r\n        }\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n    }, [dispatch, alert, isAuthenticated, error, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(login(email, password))\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        {loading ? (\r\n          <Loader />\r\n        ) : (\r\n          <Fragment>\r\n            <MetaData title={\"Login\"} />\r\n\r\n            <div className=\"row wrapper\">\r\n              <div className=\"col-10 col-lg-5\">\r\n                <form className=\"shadow-lg\" onSubmit={submitHandler}>\r\n                  <h1 className=\"mb-3\">Login</h1>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"email_field\">Email</label>\r\n                    <input\r\n                      type=\"email\"\r\n                      id=\"email_field\"\r\n                      className=\"form-control\"\r\n                      value={email}\r\n                      onChange={(e) => setEmail(e.target.value)}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"password_field\">Password</label>\r\n                    <input\r\n                      type=\"password\"\r\n                      id=\"password_field\"\r\n                      className=\"form-control\"\r\n                      value={password}\r\n                      onChange={(e) => setPassword(e.target.value)}\r\n                    />\r\n                  </div>\r\n\r\n                  {/* <Link to=\"/password/forgot\" className=\"float-right mb-4\">Forgot Password?</Link> */}\r\n\r\n                  <button\r\n                    id=\"login_button\"\r\n                    type=\"submit\"\r\n                    className=\"btn btn-block py-3\"\r\n                  >\r\n                    LOGIN\r\n                  </button>\r\n\r\n                  <Link to=\"/register\" className=\"float-right mt-3\">\r\n                    New User?\r\n                  </Link>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </Fragment>\r\n        )}\r\n      </Fragment>\r\n    );\r\n}\r\n\r\nexport default Login\r\n","D:\\Finalproject\\E-commerce\\E-commerce\\frontend\\src\\components\\admin\\OrdersList.js",[],"D:\\Finalproject\\E-commerce\\E-commerce\\frontend\\src\\components\\admin\\UpdateProduct.js",[],"D:\\Finalproject\\E-commerce\\E-commerce\\frontend\\src\\components\\admin\\UsersList.js",[],"D:\\Finalproject\\E-commerce\\E-commerce\\frontend\\src\\components\\admin\\UpdateUser.js",[],"D:\\Finalproject\\E-commerce\\E-commerce\\frontend\\src\\components\\admin\\ProductReviews.js",["236"],"import React, { Fragment, useState, useEffect } from 'react';\r\nimport { MDBDataTable } from 'mdbreact';\r\n\r\nimport MetaData from '../layout/MetaData';\r\nimport Loader from '../layout/Loader';\r\nimport Sidebar from './Sidebar';\r\n\r\nimport { useAlert } from 'react-alert';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  getProductReviews,\r\n  deleteReview,\r\n  clearErrors,\r\n} from '../../actions/productActions';\r\nimport { DELETE_REVIEW_RESET } from '../../constants/productConstants';\r\n\r\nconst ProductReviews = () => {\r\n  const [productId, setProductId] = useState('');\r\n\r\n  const alert = useAlert();\r\n  const dispatch = useDispatch();\r\n\r\n  const { error, reviews } = useSelector((state) => state.productReviews);\r\n  const { isDeleted, error: deleteError } = useSelector(\r\n    (state) => state.review\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      alert.error(error);\r\n      dispatch(clearErrors());\r\n    }\r\n\r\n    if (deleteError) {\r\n      alert.error(deleteError);\r\n      dispatch(clearErrors());\r\n    }\r\n\r\n    if (productId !== '') {\r\n      dispatch(getProductReviews(productId));\r\n    }\r\n\r\n    if (isDeleted) {\r\n      alert.success('Review deleted successfully');\r\n      dispatch({ type: DELETE_REVIEW_RESET });\r\n    }\r\n  }, [dispatch, alert, error, productId, isDeleted, deleteError]);\r\n\r\n  const deleteReviewHandler = (id) => {\r\n    dispatch(deleteReview(id, productId));\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(getProductReviews(productId));\r\n  };\r\n\r\n  const setReviews = () => {\r\n    const data = {\r\n      columns: [\r\n        {\r\n          label: 'Review ID',\r\n          field: 'id',\r\n          sort: 'asc',\r\n        },\r\n        {\r\n          label: 'Rating',\r\n          field: 'rating',\r\n          sort: 'asc',\r\n        },\r\n        {\r\n          label: 'Comment',\r\n          field: 'comment',\r\n          sort: 'asc',\r\n        },\r\n        {\r\n          label: 'User',\r\n          field: 'user',\r\n          sort: 'asc',\r\n        },\r\n        {\r\n          label: 'Actions',\r\n          field: 'actions',\r\n        },\r\n      ],\r\n      rows: [],\r\n    };\r\n\r\n    reviews.forEach((review) => {\r\n      data.rows.push({\r\n        id: review._id,\r\n        rating: review.rating,\r\n        comment: review.comment,\r\n        user: review.name,\r\n\r\n        actions: (\r\n          <button\r\n            className='btn btn-danger py-1 px-2 ml-2'\r\n            onClick={() => deleteReviewHandler(review._id)}\r\n          >\r\n            <i className='fa fa-trash'></i>\r\n          </button>\r\n        ),\r\n      });\r\n    });\r\n\r\n    return data;\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <MetaData title={'Product Reviews'} />\r\n      <div className='row'>\r\n        <div className='col-12 col-md-2'>\r\n          <Sidebar />\r\n        </div>\r\n\r\n        <div className='col-12 col-md-10'>\r\n          <Fragment>\r\n            <div className='row justify-content-center mt-5'>\r\n              <div className='col-5'>\r\n                <form onSubmit={submitHandler}>\r\n                  <div className='form-group'>\r\n                    <label htmlFor='productId_field'>Enter Product ID</label>\r\n                    <input\r\n                      type='text'\r\n                      id='productId_field'\r\n                      className='form-control'\r\n                      value={productId}\r\n                      onChange={(e) => setProductId(e.target.value)}\r\n                    />\r\n                  </div>\r\n\r\n                  <button\r\n                    id='search_button'\r\n                    type='submit'\r\n                    className='btn btn-primary btn-block py-2'\r\n                  >\r\n                    SEARCH\r\n                  </button>\r\n                </form>\r\n              </div>\r\n            </div>\r\n\r\n            {reviews && reviews.length > 0 ? (\r\n              <MDBDataTable\r\n                data={setReviews()}\r\n                className='px-3'\r\n                bordered\r\n                striped\r\n                hover\r\n              />\r\n            ) : (\r\n              <p className='mt-5 text-center'>No Reviews.</p>\r\n            )}\r\n          </Fragment>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ProductReviews;\r\n","D:\\Finalproject\\E-commerce\\E-commerce\\frontend\\src\\components\\route\\ProtectedRoute.js",[],"D:\\Finalproject\\E-commerce\\E-commerce\\frontend\\src\\actions\\userActions.js",[],"D:\\Finalproject\\E-commerce\\E-commerce\\frontend\\src\\components\\admin\\NewProduct.js",[],"D:\\Finalproject\\E-commerce\\E-commerce\\frontend\\src\\components\\admin\\ProcessOrder.js",["237"],"import React, { Fragment, useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport MetaData from '../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\nimport Sidebar from './Sidebar'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getOrderDetails, updateOrder, clearErrors } from '../../actions/orderActions'\r\nimport { UPDATE_ORDER_RESET } from '../../constants/orderConstants'\r\n\r\nconst ProcessOrder = ({ match }) => {\r\n\r\n    const [status, setStatus] = useState('');\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, order = {} } = useSelector(state => state.orderDetails)\r\n    const { shippingInfo, orderItems, paymentInfo, user, totalPrice, orderStatus } = order\r\n    const { error, isUpdated } = useSelector(state => state.order)\r\n\r\n    const orderId = match.params.id;\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch(getOrderDetails(orderId))\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if (isUpdated) {\r\n            alert.success('Order updated successfully');\r\n            dispatch({ type: UPDATE_ORDER_RESET })\r\n        }\r\n\r\n    }, [dispatch, alert, error, isUpdated, orderId])\r\n\r\n\r\n    const updateOrderHandler = (id) => {\r\n\r\n        const formData = new FormData();\r\n        formData.set('status', status);\r\n\r\n        dispatch(updateOrder(id, formData))\r\n    }\r\n\r\n    const shippingDetails = shippingInfo && `${shippingInfo.address}, ${shippingInfo.city}, ${shippingInfo.postalCode}, ${shippingInfo.country}`\r\n    const isPaid = paymentInfo && paymentInfo.status === 'succeeded' ? true : false\r\n\r\n    return (\r\n      <Fragment>\r\n        <MetaData title={`Process Order # ${order && order._id}`} />\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-md-2\">\r\n            <Sidebar />\r\n          </div>\r\n\r\n          <div className=\"col-12 col-md-10\">\r\n            <Fragment>\r\n              {loading ? (\r\n                <Loader />\r\n              ) : (\r\n                <div className=\"row d-flex justify-content-around\">\r\n                  <div className=\"col-12 col-lg-7 order-details\">\r\n                    <h2 className=\"my-5\">Order # {order._id}</h2>\r\n\r\n                    <h4 className=\"mb-4\">Shipping Info</h4>\r\n                    <p>\r\n                      <b>Name:</b> {user && user.name}\r\n                    </p>\r\n                    <p>\r\n                      <b>Phone:</b> {shippingInfo && shippingInfo.phoneNo}\r\n                    </p>\r\n                    <p className=\"mb-4\">\r\n                      <b>Address:</b>\r\n                      {shippingDetails}\r\n                    </p>\r\n                    <p>\r\n                      <b>Amount:</b> ₹{totalPrice}\r\n                    </p>\r\n\r\n                    <hr />\r\n\r\n                    <h4 className=\"my-4\">Payment</h4>\r\n                    <p className={isPaid ? \"greenColor\" : \"redColor\"}>\r\n                      <b>{isPaid ? \"PAID\" : \"NOT PAID\"}</b>\r\n                    </p>\r\n\r\n                    <h4 className=\"my-4\">Stripe ID</h4>\r\n                    <p>\r\n                      <b>{paymentInfo && paymentInfo.id}</b>\r\n                    </p>\r\n\r\n                    <h4 className=\"my-4\">Order Status:</h4>\r\n                    <p\r\n                      className={\r\n                        order.orderStatus &&\r\n                        String(order.orderStatus).includes(\"Delivered\")\r\n                          ? \"greenColor\"\r\n                          : \"redColor\"\r\n                      }\r\n                    >\r\n                      <b>{orderStatus}</b>\r\n                    </p>\r\n\r\n                    <h4 className=\"my-4\">Order Items:</h4>\r\n\r\n                    <hr />\r\n                    <div className=\"cart-item my-1\">\r\n                      {orderItems &&\r\n                        orderItems.map((item) => (\r\n                          <div key={item.product} className=\"row my-5\">\r\n                            <div className=\"col-4 col-lg-2\">\r\n                              <img\r\n                                src={item.image}\r\n                                alt={item.name}\r\n                                height=\"45\"\r\n                                width=\"65\"\r\n                              />\r\n                            </div>\r\n\r\n                            <div className=\"col-5 col-lg-5\">{item.name}</div>\r\n\r\n                            <div className=\"col-4 col-lg-2 mt-4 mt-lg-0\">\r\n                              <p>₹{item.price}</p>\r\n                            </div>\r\n\r\n                            <div className=\"col-4 col-lg-3 mt-4 mt-lg-0\">\r\n                              <p>{item.quantity} Piece(s)</p>\r\n                            </div>\r\n                          </div>\r\n                        ))}\r\n                    </div>\r\n                    <hr />\r\n                  </div>\r\n\r\n                  <div className=\"col-12 col-lg-3 mt-5\">\r\n                    <h4 className=\"my-4\">Status</h4>\r\n\r\n                    <div className=\"form-group\">\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"status\"\r\n                        value={status}\r\n                        onChange={(e) => setStatus(e.target.value)}\r\n                      >\r\n                        <option value=\"Processing\">Processing</option>\r\n                        <option value=\"Shipped\">Shipped</option>\r\n                        <option value=\"Delivered\">Delivered</option>\r\n                      </select>\r\n                    </div>\r\n\r\n                    <button\r\n                      className=\"btn btn-primary btn-block\"\r\n                      onClick={() => updateOrderHandler(order._id)}\r\n                    >\r\n                      Update Status\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </Fragment>\r\n          </div>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n}\r\n\r\nexport default ProcessOrder\r\n","D:\\Finalproject\\E-commerce\\E-commerce\\frontend\\src\\components\\admin\\ProductsList.js",[],"D:\\Finalproject\\E-commerce\\E-commerce\\frontend\\src\\components\\order\\OrderDetails.js",["238"],"import React, { Fragment, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport MetaData from '../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getOrderDetails, clearErrors } from '../../actions/orderActions'\r\n\r\nconst OrderDetails = ({ match }) => {\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, error, order = {} } = useSelector(state => state.orderDetails)\r\n    const { shippingInfo, orderItems, paymentInfo, user, totalPrice, orderStatus } = order\r\n\r\n    useEffect(() => {\r\n        dispatch(getOrderDetails(match.params.id));\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors())\r\n        }\r\n    }, [dispatch, alert, error, match.params.id])\r\n\r\n    const shippingDetails = shippingInfo && `${shippingInfo.address}, ${shippingInfo.city}, ${shippingInfo.postalCode}, ${shippingInfo.country}`\r\n\r\n    const isPaid = paymentInfo && paymentInfo.status === 'succeeded' ? true : false\r\n\r\n    return (\r\n      <Fragment>\r\n        <MetaData title={\"Order Details\"} />\r\n\r\n        {loading ? (\r\n          <Loader />\r\n        ) : (\r\n          <Fragment>\r\n            <div className=\"row d-flex justify-content-between\">\r\n              <div className=\"col-12 col-lg-8 mt-5 order-details\">\r\n                <h1 className=\"my-5\">Order # {order._id}</h1>\r\n\r\n                <h4 className=\"mb-4\">Shipping Info</h4>\r\n                <p>\r\n                  <b>Name:</b> {user && user.name}\r\n                </p>\r\n                <p>\r\n                  <b>Phone:</b> {shippingInfo && shippingInfo.phoneNo}\r\n                </p>\r\n                <p className=\"mb-4\">\r\n                  <b>Address:</b>\r\n                  {shippingDetails}\r\n                </p>\r\n                <p>\r\n                  <b>Amount:</b> ₹{totalPrice}\r\n                </p>\r\n\r\n                <hr />\r\n\r\n                <h4 className=\"my-4\">Payment</h4>\r\n                <p className={isPaid ? \"greenColor\" : \"redColor\"}>\r\n                  <b>{isPaid ? \"PAID\" : \"NOT PAID\"}</b>\r\n                </p>\r\n\r\n                <h4 className=\"my-4\">Order Status:</h4>\r\n                <p\r\n                  className={\r\n                    order.orderStatus &&\r\n                    String(order.orderStatus).includes(\"Delivered\")\r\n                      ? \"greenColor\"\r\n                      : \"redColor\"\r\n                  }\r\n                >\r\n                  <b>{orderStatus}</b>\r\n                </p>\r\n\r\n                <h4 className=\"my-4\">Order Items:</h4>\r\n\r\n                <hr />\r\n                <div className=\"cart-item my-1\">\r\n                  {orderItems &&\r\n                    orderItems.map((item) => (\r\n                      <div key={item.product} className=\"row my-5\">\r\n                        <div className=\"col-4 col-lg-2\">\r\n                          <img\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            height=\"45\"\r\n                            width=\"65\"\r\n                          />\r\n                        </div>\r\n\r\n                        <div className=\"col-5 col-lg-5\">{item.name}</div>\r\n\r\n                        <div className=\"col-4 col-lg-2 mt-4 mt-lg-0\">\r\n                          <p>₹{item.price}</p>\r\n                        </div>\r\n\r\n                        <div className=\"col-4 col-lg-3 mt-4 mt-lg-0\">\r\n                          <p>{item.quantity} Piece(s)</p>\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                </div>\r\n                <hr />\r\n              </div>\r\n            </div>\r\n          </Fragment>\r\n        )}\r\n      </Fragment>\r\n    );\r\n}\r\n\r\nexport default OrderDetails\r\n","D:\\Finalproject\\E-commerce\\E-commerce\\frontend\\src\\components\\layout\\MetaData.js",[],"D:\\Finalproject\\E-commerce\\E-commerce\\frontend\\src\\components\\layout\\Loader.js",[],"D:\\Finalproject\\E-commerce\\E-commerce\\frontend\\src\\components\\product\\Product.js",["239"],"import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Product = ({ product, col }) => {\r\n    return (\r\n      <div className={`col-sm-12 col-md-6 col-lg-${col} my-3`}>\r\n        <div className=\"card p-3 rounded\">\r\n          <img className=\"card-img-top mx-auto\" src={product.images[0].url} />\r\n          <div className=\"card-body d-flex flex-column\">\r\n            <h5 className=\"card-title\">\r\n              <Link to={`/product/${product._id}`}>{product.name}</Link>\r\n            </h5>\r\n            <div className=\"ratings mt-auto\">\r\n              <div className=\"rating-outer\">\r\n                <div\r\n                  className=\"rating-inner\"\r\n                  style={{ width: `${(product.ratings / 5) * 100}%` }}\r\n                ></div>\r\n              </div>\r\n              <span id=\"no_of_reviews\">({product.numOfReviews} Reviews)</span>\r\n            </div>\r\n            <p className=\"card-text\">&#8377; {product.price}</p>\r\n            <Link\r\n              to={`/product/${product._id}`}\r\n              id=\"view_btn\"\r\n              className=\"btn btn-block\"\r\n            >\r\n              View Details\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Product\r\n","D:\\Finalproject\\E-commerce\\E-commerce\\frontend\\src\\actions\\productActions.js",["240"],"import axios from 'axios';\r\n\r\nimport {\r\n    ALL_PRODUCTS_REQUEST,\r\n    ALL_PRODUCTS_SUCCESS,\r\n    ALL_PRODUCTS_FAIL,\r\n    ADMIN_PRODUCTS_REQUEST,\r\n    ADMIN_PRODUCTS_SUCCESS,\r\n    ADMIN_PRODUCTS_FAIL,\r\n    NEW_PRODUCT_REQUEST,\r\n    NEW_PRODUCT_SUCCESS,\r\n    NEW_PRODUCT_FAIL,\r\n    DELETE_PRODUCT_REQUEST,\r\n    DELETE_PRODUCT_SUCCESS,\r\n    DELETE_PRODUCT_FAIL,\r\n    UPDATE_PRODUCT_REQUEST,\r\n    UPDATE_PRODUCT_SUCCESS,\r\n    UPDATE_PRODUCT_FAIL,\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n    NEW_REVIEW_REQUEST,\r\n    NEW_REVIEW_SUCCESS,\r\n    NEW_REVIEW_FAIL,\r\n    GET_REVIEWS_REQUEST,\r\n    GET_REVIEWS_SUCCESS,\r\n    GET_REVIEWS_FAIL,\r\n    DELETE_REVIEW_REQUEST,\r\n    DELETE_REVIEW_SUCCESS,\r\n    DELETE_REVIEW_RESET,\r\n    DELETE_REVIEW_FAIL,\r\n    CLEAR_ERRORS\r\n\r\n} from '../constants/productConstants'\r\n\r\nexport const getProducts = (keyword = '', currentPage = 1, price, category, rating = 0) => async (dispatch) => {\r\n    try {\r\n      dispatch({ type: ALL_PRODUCTS_REQUEST });\r\n\r\n      let link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&price[lte]=${price[1]}&price[gte]=${price[0]}&ratings[gte]=${rating}`;\r\n\r\n      if (category) {\r\n        link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&price[lte]=${price[1]}&price[gte]=${price[0]}&category=${category}&ratings[gte]=${rating}`;\r\n      }\r\n      console.log(link);\r\n\r\n      const { data } = await axios.get(link);\r\n\r\n      console.log(data);\r\n\r\n      dispatch({\r\n        type: ALL_PRODUCTS_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ALL_PRODUCTS_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const newProduct = (productData) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: NEW_PRODUCT_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(`/api/v1/admin/product/new`, productData, config)\r\n\r\n        dispatch({\r\n            type: NEW_PRODUCT_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: NEW_PRODUCT_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Delete product (Admin)\r\nexport const deleteProduct = (id) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: DELETE_PRODUCT_REQUEST })\r\n\r\n        const { data } = await axios.delete(`/api/v1/admin/product/${id}`)\r\n\r\n        dispatch({\r\n            type: DELETE_PRODUCT_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: DELETE_PRODUCT_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Update Product (ADMIN)\r\nexport const updateProduct = (id, productData) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: UPDATE_PRODUCT_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/v1/admin/product/${id}`, productData, config)\r\n\r\n        dispatch({\r\n            type: UPDATE_PRODUCT_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: UPDATE_PRODUCT_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/v1/product/${id}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data.product\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const newReview = (reviewData) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: NEW_REVIEW_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/v1/review`, reviewData, config)\r\n\r\n        dispatch({\r\n            type: NEW_REVIEW_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: NEW_REVIEW_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getAdminProducts = () => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: ADMIN_PRODUCTS_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/v1/admin/products`)\r\n\r\n        dispatch({\r\n            type: ADMIN_PRODUCTS_SUCCESS,\r\n            payload: data.products\r\n        })\r\n\r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: ADMIN_PRODUCTS_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Get product reviews\r\nexport const getProductReviews = (id) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: GET_REVIEWS_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/v1/reviews?id=${id}`)\r\n\r\n        dispatch({\r\n            type: GET_REVIEWS_SUCCESS,\r\n            payload: data.reviews\r\n        })\r\n\r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: GET_REVIEWS_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Delete product review\r\nexport const deleteReview = (id, productId) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: DELETE_REVIEW_REQUEST })\r\n\r\n        const { data } = await axios.delete(`/api/v1/reviews?id=${id}&productId=${productId}`)\r\n\r\n        dispatch({\r\n            type: DELETE_REVIEW_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n\r\n        console.log(error.response);\r\n\r\n        dispatch({\r\n            type: DELETE_REVIEW_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Clear Errors\r\nexport const clearErrors = () => async (dispatch) => {\r\n    dispatch({\r\n        type: CLEAR_ERRORS\r\n    })\r\n}","D:\\Finalproject\\E-commerce\\E-commerce\\frontend\\src\\components\\layout\\Search.js",[],"D:\\Finalproject\\E-commerce\\E-commerce\\frontend\\src\\actions\\orderActions.js",[],"D:\\Finalproject\\E-commerce\\E-commerce\\frontend\\src\\components\\admin\\Sidebar.js",[],"D:\\Finalproject\\E-commerce\\E-commerce\\frontend\\src\\constants\\cartConstants.js",[],"D:\\Finalproject\\E-commerce\\E-commerce\\frontend\\src\\constants\\productConstants.js",[],"D:\\Finalproject\\E-commerce\\E-commerce\\frontend\\src\\constants\\userConstants.js",[],"D:\\Finalproject\\E-commerce\\E-commerce\\frontend\\src\\constants\\orderConstants.js",[],"D:\\Finalproject\\E-commerce\\E-commerce\\frontend\\src\\assets\\icons\\icons.js",[],"D:\\Finalproject\\E-commerce\\E-commerce\\frontend\\src\\actions\\cartActions.js",[],"D:\\Finalproject\\E-commerce\\E-commerce\\frontend\\src\\components\\cart\\CheckoutSteps.js",[],"D:\\Finalproject\\E-commerce\\E-commerce\\frontend\\src\\components\\review\\ListReviews.js",[],{"ruleId":"241","severity":1,"message":"242","line":15,"column":7,"nodeType":"243","messageId":"244","endLine":15,"endColumn":12},{"ruleId":"241","severity":1,"message":"245","line":19,"column":17,"nodeType":"243","messageId":"244","endLine":19,"endColumn":25},{"ruleId":"241","severity":1,"message":"246","line":67,"column":9,"nodeType":"243","messageId":"244","endLine":67,"endColumn":20},{"ruleId":"241","severity":1,"message":"247","line":68,"column":9,"nodeType":"243","messageId":"244","endLine":68,"endColumn":21},{"ruleId":"241","severity":1,"message":"245","line":16,"column":17,"nodeType":"243","messageId":"244","endLine":16,"endColumn":25},{"ruleId":"241","severity":1,"message":"248","line":17,"column":18,"nodeType":"243","messageId":"244","endLine":17,"endColumn":27},{"ruleId":"241","severity":1,"message":"249","line":28,"column":5,"nodeType":"243","messageId":"244","endLine":28,"endColumn":26},{"ruleId":"241","severity":1,"message":"250","line":7,"column":8,"nodeType":"243","messageId":"244","endLine":7,"endColumn":15},{"ruleId":"241","severity":1,"message":"251","line":27,"column":12,"nodeType":"243","messageId":"244","endLine":27,"endColumn":29},{"ruleId":"252","severity":1,"message":"253","line":30,"column":25,"nodeType":"254","messageId":"255","endLine":30,"endColumn":27},{"ruleId":"256","severity":1,"message":"257","line":35,"column":6,"nodeType":"258","endLine":35,"endColumn":19,"suggestions":"259"},{"ruleId":"241","severity":1,"message":"260","line":6,"column":10,"nodeType":"243","messageId":"244","endLine":6,"endColumn":18},{"ruleId":"256","severity":1,"message":"261","line":50,"column":6,"nodeType":"258","endLine":50,"endColumn":50,"suggestions":"262"},{"ruleId":"256","severity":1,"message":"263","line":34,"column":8,"nodeType":"258","endLine":34,"endColumn":58,"suggestions":"264"},{"ruleId":"241","severity":1,"message":"265","line":5,"column":8,"nodeType":"243","messageId":"244","endLine":5,"endColumn":14},{"ruleId":"241","severity":1,"message":"266","line":2,"column":10,"nodeType":"243","messageId":"244","endLine":2,"endColumn":14},{"ruleId":"241","severity":1,"message":"266","line":2,"column":10,"nodeType":"243","messageId":"244","endLine":2,"endColumn":14},{"ruleId":"267","severity":1,"message":"268","line":8,"column":11,"nodeType":"269","endLine":8,"endColumn":79},{"ruleId":"241","severity":1,"message":"270","line":30,"column":5,"nodeType":"243","messageId":"244","endLine":30,"endColumn":24},"no-unused-vars","'Range' is assigned a value but never used.","Identifier","unusedVar","'setPrice' is assigned a value but never used.","'lowestPrice' is assigned a value but never used.","'highestPrice' is assigned a value but never used.","'setRating' is assigned a value but never used.","'filteredProductsCount' is assigned a value but never used.","'LogoIMG' is defined but never used.","'handleButtonClick' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'cartItems' and 'id'. Either include them or remove the dependency array.","ArrayExpression",["271"],"'useAlert' is defined but never used.","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["272"],"React Hook useEffect has a missing dependency: 'redirect'. Either include it or remove the dependency array.",["273"],"'Loader' is defined but never used.","'Link' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'DELETE_REVIEW_RESET' is defined but never used.",{"desc":"274","fix":"275"},{"desc":"276","fix":"277"},{"desc":"278","fix":"279"},"Update the dependencies array to be: [cartItems, id, isAvailable]",{"range":"280","text":"281"},"Update the dependencies array to be: [dispatch, alert, error, history, isUpdated, user]",{"range":"282","text":"283"},"Update the dependencies array to be: [dispatch, alert, isAuthenticated, error, history, redirect]",{"range":"284","text":"285"},[1168,1181],"[cartItems, id, isAvailable]",[1288,1332],"[dispatch, alert, error, history, isUpdated, user]",[947,997],"[dispatch, alert, isAuthenticated, error, history, redirect]"]